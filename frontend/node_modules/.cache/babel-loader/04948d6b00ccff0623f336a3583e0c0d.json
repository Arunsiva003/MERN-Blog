{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarun\\\\GitClones\\\\MERN-BLOG-PROJECT\\\\frontend\\\\src\\\\components\\\\typing\\\\typingAnimation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Container;\nconst Text = styled.p`\n  font-size: 3rem;\n  color: ${_ref => {\n  let {\n    color\n  } = _ref;\n  return color;\n}};\n`;\n_c2 = Text;\n\nconst getCurrentColor = (colors, currentColorIndex) => {\n  const colorCount = colors.length;\n  const nextColorIndex = (currentColorIndex + 1) % colorCount;\n  return colors[nextColorIndex];\n};\n\nexport const TypingAnimation = _ref2 => {\n  _s();\n\n  let {\n    texts,\n    colors,\n    typingDelay,\n    erasingDelay,\n    newLineDelay,\n    blinkDelay,\n    scrollDownText\n  } = _ref2;\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [currentTextColorIndex, setCurrentTextColorIndex] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(true);\n  const [blinkVisible, setBlinkVisible] = useState(true);\n  useEffect(() => {\n    const textToType = texts[currentTextIndex];\n    const currentColor = colors[currentTextColorIndex];\n    const textLength = textToType.length;\n    let currentIndex = 0;\n    let currentTimeout = null;\n\n    const type = () => {\n      const delay = currentIndex === 0 ? typingDelay : newLineDelay;\n      currentTimeout = setTimeout(() => {\n        setText(prevText => prevText + textToType[currentIndex]);\n        currentIndex++;\n\n        if (currentIndex < textLength) {\n          type();\n        } else {\n          setIsTyping(false);\n          setTimeout(erase, erasingDelay);\n        }\n      }, delay);\n    };\n\n    const erase = () => {\n      const delay = currentIndex === textLength ? newLineDelay : erasingDelay;\n      currentTimeout = setTimeout(() => {\n        setText(prevText => prevText.slice(0, -1));\n        currentIndex--;\n\n        if (currentIndex > 0) {\n          erase();\n        } else {\n          setIsTyping(true);\n          const nextTextIndex = (currentTextIndex + 1) % texts.length;\n          const nextColor = getCurrentColor(colors, currentTextColorIndex);\n          setCurrentTextIndex(nextTextIndex);\n          setCurrentTextColorIndex((currentTextColorIndex + 1) % colors.length);\n          setTimeout(() => type(nextColor), typingDelay);\n        }\n      }, delay);\n    };\n\n    type();\n    return () => {\n      clearTimeout(currentTimeout);\n    };\n  }, [currentTextIndex, currentTextColorIndex, colors, erasingDelay, newLineDelay, texts, typingDelay]);\n  useEffect(() => {\n    const blinkInterval = setInterval(() => {\n      setBlinkVisible(prevBlinkVisible => !prevBlinkVisible);\n    }, blinkDelay);\n    return () => {\n      clearInterval(blinkInterval);\n    };\n  }, [blinkDelay]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: colors[currentTextColorIndex],\n      children: [text, isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          visibility: blinkVisible ? \"visible\" : \"hidden\"\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), scrollDownText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scrollDownText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TypingAnimation, \"ZIddetYhCQNeQp8NYRE/JHGF6Xs=\");\n\n_c3 = TypingAnimation;\nexport default TypingAnimation;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","styled","Container","div","Text","p","color","getCurrentColor","colors","currentColorIndex","colorCount","length","nextColorIndex","TypingAnimation","texts","typingDelay","erasingDelay","newLineDelay","blinkDelay","scrollDownText","currentTextIndex","setCurrentTextIndex","currentTextColorIndex","setCurrentTextColorIndex","text","setText","isTyping","setIsTyping","blinkVisible","setBlinkVisible","textToType","currentColor","textLength","currentIndex","currentTimeout","type","delay","setTimeout","prevText","erase","slice","nextTextIndex","nextColor","clearTimeout","blinkInterval","setInterval","prevBlinkVisible","clearInterval","visibility"],"sources":["C:/Users/aarun/GitClones/MERN-BLOG-PROJECT/frontend/src/components/typing/typingAnimation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 3rem;\r\n  color: ${({ color }) => color};\r\n`;\r\n\r\nconst getCurrentColor = (colors, currentColorIndex) => {\r\n  const colorCount = colors.length;\r\n  const nextColorIndex = (currentColorIndex + 1) % colorCount;\r\n  return colors[nextColorIndex];\r\n};\r\n\r\nexport const TypingAnimation = ({ texts, colors, typingDelay, erasingDelay, newLineDelay, blinkDelay, scrollDownText }) => {\r\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\r\n  const [currentTextColorIndex, setCurrentTextColorIndex] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(true);\r\n  const [blinkVisible, setBlinkVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const textToType = texts[currentTextIndex];\r\n    const currentColor = colors[currentTextColorIndex];\r\n    const textLength = textToType.length;\r\n\r\n    let currentIndex = 0;\r\n    let currentTimeout = null;\r\n\r\n    const type = () => {\r\n      const delay = currentIndex === 0 ? typingDelay : newLineDelay;\r\n      currentTimeout = setTimeout(() => {\r\n        setText((prevText) => prevText + textToType[currentIndex]);\r\n        currentIndex++;\r\n        if (currentIndex < textLength) {\r\n          type();\r\n        } else {\r\n          setIsTyping(false);\r\n          setTimeout(erase, erasingDelay);\r\n        }\r\n      }, delay);\r\n    };\r\n\r\n    const erase = () => {\r\n      const delay = currentIndex === textLength ? newLineDelay : erasingDelay;\r\n      currentTimeout = setTimeout(() => {\r\n        setText((prevText) => prevText.slice(0, -1));\r\n        currentIndex--;\r\n        if (currentIndex > 0) {\r\n          erase();\r\n        } else {\r\n          setIsTyping(true);\r\n          const nextTextIndex = (currentTextIndex + 1) % texts.length;\r\n          const nextColor = getCurrentColor(colors, currentTextColorIndex);\r\n          setCurrentTextIndex(nextTextIndex);\r\n          setCurrentTextColorIndex((currentTextColorIndex + 1) % colors.length);\r\n          setTimeout(() => type(nextColor), typingDelay);\r\n        }\r\n      }, delay);\r\n    };\r\n\r\n    type();\r\n    return () => {\r\n      clearTimeout(currentTimeout);\r\n    };\r\n  }, [currentTextIndex, currentTextColorIndex, colors, erasingDelay, newLineDelay, texts, typingDelay]);\r\n\r\n  useEffect(() => {\r\n    const blinkInterval = setInterval(() => {\r\n      setBlinkVisible((prevBlinkVisible) => !prevBlinkVisible);\r\n    }, blinkDelay);\r\n    return () => {\r\n      clearInterval(blinkInterval);\r\n    };\r\n  }, [blinkDelay]);\r\n\r\n  return (\r\n    <Container>\r\n      <Text color={colors[currentTextColorIndex]}>\r\n        {text}\r\n        {isTyping && <span style={{ visibility: blinkVisible ? \"visible\" : \"hidden\" }}>|</span>}\r\n      </Text>\r\n      {scrollDownText && <div>{scrollDownText}</div>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}