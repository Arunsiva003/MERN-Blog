{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarun\\\\GitClones\\\\MERN-BLOG-PROJECT\\\\frontend\\\\src\\\\components\\\\typing\\\\typingAnimation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', '#472E32', '#BDBB99', '#77B1A9', '#73A857'];\nconst typing = keyframes`\n  from {\n    width: 0;\n  }\n  to {\n    width: 100%;\n  }\n`;\nconst blinkCaret = keyframes`\n  from,\n  to {\n    border-color: transparent;\n  }\n  50% {\n    border-color: ${props => props.currentColor};\n  }\n`;\nconst TypingContainer = styled.div`\n  color: ${props => props.currentColor};\n  margin-top: 3rem;\n  font-size: 2rem;\n  font-weight: 500;\n  text-align: center;\n`;\n_c = TypingContainer;\nconst TypingLine = styled.div`\n  overflow: hidden; /* Ensures the content is not revealed until the animation */\n  border-right: 0.15em solid ${props => props.currentColor}; /* The typewriter cursor */\n  white-space: nowrap; /* Keeps the content on a single line */\n  margin: 0 auto; /* Gives that scrolling effect as the typing happens */\n  letter-spacing: 0.15em; /* Adjust as needed */\n  animation: ${typing} 3.5s steps(40, end), ${blinkCaret} 0.75s step-end infinite;\n`;\n_c2 = TypingLine;\nconst ScrollDownText = styled.p`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 1.2rem;\n  color: white;\n  animation: ${blinkCaret} 1s linear infinite;\n`;\n_c3 = ScrollDownText;\nexport const TypingAnimation = _ref => {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [currentColor, setCurrentColor] = useState(colors[0]);\n  useEffect(() => {\n    const colorInterval = setInterval(() => {\n      setCurrentColor(colors[Math.floor(Math.random() * colors.length)]);\n    }, 3000);\n    return () => clearInterval(colorInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TypingContainer, {\n    currentColor: currentColor,\n    children: [/*#__PURE__*/_jsxDEV(TypingLine, {\n      currentColor: currentColor,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollDownText, {\n      children: \"SCROLL DOWN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TypingAnimation, \"vTkCdbBZ6rp81/12uuNtN9Sl9FE=\");\n\n_c4 = TypingAnimation;\nexport default TypingAnimation;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TypingContainer\");\n$RefreshReg$(_c2, \"TypingLine\");\n$RefreshReg$(_c3, \"ScrollDownText\");\n$RefreshReg$(_c4, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","colors","typing","blinkCaret","props","currentColor","TypingContainer","div","TypingLine","ScrollDownText","p","TypingAnimation","text","setCurrentColor","colorInterval","setInterval","Math","floor","random","length","clearInterval"],"sources":["C:/Users/aarun/GitClones/MERN-BLOG-PROJECT/frontend/src/components/typing/typingAnimation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', '#472E32', '#BDBB99', '#77B1A9', '#73A857'];\r\n\r\nconst typing = keyframes`\r\n  from {\r\n    width: 0;\r\n  }\r\n  to {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst blinkCaret = keyframes`\r\n  from,\r\n  to {\r\n    border-color: transparent;\r\n  }\r\n  50% {\r\n    border-color: ${props => props.currentColor};\r\n  }\r\n`;\r\n\r\nconst TypingContainer = styled.div`\r\n  color: ${props => props.currentColor};\r\n  margin-top: 3rem;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nconst TypingLine = styled.div`\r\n  overflow: hidden; /* Ensures the content is not revealed until the animation */\r\n  border-right: 0.15em solid ${props => props.currentColor}; /* The typewriter cursor */\r\n  white-space: nowrap; /* Keeps the content on a single line */\r\n  margin: 0 auto; /* Gives that scrolling effect as the typing happens */\r\n  letter-spacing: 0.15em; /* Adjust as needed */\r\n  animation: ${typing} 3.5s steps(40, end), ${blinkCaret} 0.75s step-end infinite;\r\n`;\r\n\r\nconst ScrollDownText = styled.p`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.2rem;\r\n  color: white;\r\n  animation: ${blinkCaret} 1s linear infinite;\r\n`;\r\n\r\nexport const TypingAnimation = ({ text }) => {\r\n  const [currentColor, setCurrentColor] = useState(colors[0]);\r\n\r\n  useEffect(() => {\r\n    const colorInterval = setInterval(() => {\r\n      setCurrentColor(colors[Math.floor(Math.random() * colors.length)]);\r\n    }, 3000);\r\n    return () => clearInterval(colorInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <TypingContainer currentColor={currentColor}>\r\n      <TypingLine currentColor={currentColor}>{text}</TypingLine>\r\n      <ScrollDownText>SCROLL DOWN</ScrollDownText>\r\n    </TypingContainer>\r\n  );\r\n};\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;;AAEA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,EAA0H,SAA1H,CAAf;AAEA,MAAMC,MAAM,GAAGF,SAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMG,UAAU,GAAGH,SAAU;AAC7B;AACA;AACA;AACA;AACA;AACA,oBAAoBI,KAAK,IAAIA,KAAK,CAACC,YAAa;AAChD;AACA,CARA;AAUA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAI;AACnC,WAAWH,KAAK,IAAIA,KAAK,CAACC,YAAa;AACvC;AACA;AACA;AACA;AACA,CANA;KAAMC,e;AAQN,MAAME,UAAU,GAAGT,MAAM,CAACQ,GAAI;AAC9B;AACA,+BAA+BH,KAAK,IAAIA,KAAK,CAACC,YAAa;AAC3D;AACA;AACA;AACA,eAAeH,MAAO,yBAAwBC,UAAW;AACzD,CAPA;MAAMK,U;AASN,MAAMC,cAAc,GAAGV,MAAM,CAACW,CAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAeP,UAAW;AAC1B,CARA;MAAMM,c;AAUN,OAAO,MAAME,eAAe,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC3C,MAAM,CAACP,YAAD,EAAeQ,eAAf,IAAkChB,QAAQ,CAACI,MAAM,CAAC,CAAD,CAAP,CAAhD;EAEAH,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtCF,eAAe,CAACZ,MAAM,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,MAAM,CAACkB,MAAlC,CAAD,CAAP,CAAf;IACD,CAFgC,EAE9B,IAF8B,CAAjC;IAGA,OAAO,MAAMC,aAAa,CAACN,aAAD,CAA1B;EACD,CALQ,EAKN,EALM,CAAT;EAOA,oBACE,QAAC,eAAD;IAAiB,YAAY,EAAET,YAA/B;IAAA,wBACE,QAAC,UAAD;MAAY,YAAY,EAAEA,YAA1B;MAAA,UAAyCO;IAAzC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,cAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAhBM;;GAAMD,e;;MAAAA,e;AAkBb,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}